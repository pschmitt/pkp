name: Craft a new release

on:
  push:
    tags:
      - '*'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch:
          - amd64
          - 386
          - arm
          - arm64
          # - ppc64le
          # - s390x
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest
          install: true

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Build pkp (${{ matrix.arch }})
        run: |
          export DOCKER_CLI_EXPERIMENTAL=enabled
          ./build.sh "${{ matrix.arch }}"

      - name: Upload binary artifact (dynamic)
        uses: actions/upload-artifact@v2
        with:
          name: pkp-${{ matrix.arch }}
          path: ./dist/pkp-${{ matrix.arch }}

      - name: Upload binary artifact (static)
        uses: actions/upload-artifact@v2
        with:
          name: pkp-${{ matrix.arch }}-static
          path: ./dist/pkp-${{ matrix.arch }}-static

  release:
    name: Create release
    runs-on: ubuntu-latest
    needs: build
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  release_attach_binaries:
    name: Add binaries to release
    runs-on: ubuntu-latest
    needs: release
    strategy:
      fail-fast: false
      matrix:
        arch:
          - amd64
          - 386
          - arm
          - arm64
          # - ppc64le
          # - s390x
    steps:
      - name: Download binary artifacts
        uses: actions/download-artifact@v2
        with:
          path: ./

      - name: Upload Release Asset (${{ matrix.arch }})
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./pkp-${{ matrix.arch }}/pkp-${{ matrix.arch }}
          asset_name: pkp-${{ github.ref }}-${{ matrix.arch }}
          asset_content_type: application/octet-stream

      - name: Upload Release Asset (${{ matrix.arch }}-static)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./pkp-${{ matrix.arch }}-static/pkp-${{ matrix.arch }}-static
          asset_name: pkp-${{ github.ref }}-${{ matrix.arch }}-static
          asset_content_type: application/octet-stream

      # - name: Delete release if anything goes wrong.
      #   if: ${{ failure() }}
      #   uses: author/action-rollback@master
      #   with:
      #     release_id: ${{ steps.create_release.id }}
      #     tag: ${{ github.ref }}
      #     always_delete_tag: true
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
