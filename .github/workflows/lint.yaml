name: Python Lint

on: [push, pull_request]

jobs:
  flake8:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          if [[ -f requirements.txt ]]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. Set line length to 80 chars max.
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=80 --statistics

  poetry:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Create poetry env
        run: |
          poetry install

      - name: Check requirements
        run: |
          poetry export -f requirements.txt --without-hashes -o requirements-ci.txt
          poetry export -f requirements.txt --without-hashes --dev -o requirements-ci-dev.txt
          diff ./requirements.txt ./requirements-ci.txt
          diff ./requirements-dev.txt ./requirements-ci-dev.txt

      - name: Check compare version in pyproject.toml and pkp.__version__
        run: |
          v_pyproject=$(poetry version -s --no-ansi)
          v_py=$(poetry run python -c "import pkp; print(pkp.__version__)")
          if [[ "$v_pyproject" != "$v_py" ]]; then echo "Version mismatch detected" >&2; exit 1; fi


  black:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black

      - name: Black
        run: |
          black --check --line-length=80 .

  readme:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Create poetry env
        run: |
          poetry install

      - name: Check if README is up to date (pkp --help)
        run: |
          cp README.md README.md.orig
          ./dev-update.sh README
          diff ./README.md ./README.md.orig
