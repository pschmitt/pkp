name: Upload Release Asset

on:
  push:
    branches:
      - multiarch

jobs:
  build:
    name: Multiarch build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch:
          - amd64
          - 386
          # - arm
          # - arm64
          # - ppc64le
          # - s390x
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
         platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest
          install: true

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Build pkp (${{ matrix.arch }})
        run: |
          export DOCKER_CLI_EXPERIMENTAL=enabled
          ./build.sh "${{ matrix.arch }}"

      - name: Upload binary artifact
        uses: actions/upload-artifact@v2
        with:
          name: pkp_${{ matrix.arch }}_static
          path: ./dist/pkp_${{ matrix.arch }}_static

  release:
    name: Create release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download binary artifacts
        uses: actions/download-artifact@v2
        with:
          path: ./

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: true

      - uses: nick-invision/persist-action-data@v1
        with:
          data: ${{ steps.create_release.outputs.upload_url }}
          variable: RELEASE_UPLOAD_URL

      - run: ls -al
      - run: ls -al pkp_386_static

  attach_binaries:
    name: Attach binaries to release
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch:
          - amd64
          - 386
          # - arm
          # - arm64
          # - ppc64le
          # - s390x
    steps:
      - uses: nick-invision/persist-action-data@v1
        with:
          data: ${{ steps.create_release.outputs.upload_url }}
          retrieve_variables: RELEASE_UPLOAD_URL

      - run: echo ${{ steps.create_release.outputs.upload_url.RELEASE_UPLOAD_URL }}

      - name: Upload Release Asset (${{ matrix.arch }})
        id: upload-release-asset-${{ matrix.arch }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./pkp_${{ matrix.arch }}_static/pkp_${{ matrix.arch }}_static
          asset_name: pkp_${{ matrix.arch }}_static
          asset_content_type: application/octet-stream

      # - name: Delete release if anything goes wrong.
      #   if: ${{ failure() }}
      #   uses: author/action-rollback@master
      #   with:
      #     release_id: ${{ steps.create_release.id }}
      #     tag: ${{ github.ref }}
      #     always_delete_tag: true
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
